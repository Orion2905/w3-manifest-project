# Azure DevOps Pipeline per W3 Manifest Project
# Questo file configura la CI/CD per il deployment su Azure App Service

trigger:
- main
- develop

variables:
  # Azure Service Connection
  azureSubscription: 'your-azure-subscription'
  
  # Backend App Service
  backendAppName: 'w3-manifest-backend'
  backendResourceGroup: 'w3-manifest-rg'
  
  # Frontend App Service o Static Web App
  frontendAppName: 'w3-manifest-frontend'
  frontendResourceGroup: 'w3-manifest-rg'
  
  # Python version per il backend
  pythonVersion: '3.11'
  
  # Node.js version per il frontend
  nodeVersion: '18.x'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: BuildBackend
    displayName: 'Build Backend'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'
    
    - script: |
        cd backend
        python -m venv antenv
        source antenv/bin/activate
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install Backend Dependencies'
    
    # Add backend build steps here
    
  - job: BuildFrontend
    displayName: 'Build Frontend'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeVersion)'
      displayName: 'Use Node $(nodeVersion)'
    
    - script: |
        cd frontend
        npm install
        npm run build
      displayName: 'Install and Build Frontend'
    
    # Add frontend build artifacts

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployBackend
    displayName: 'Deploy Backend to Azure App Service'
    environment: 'production'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Backend'
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: 'webAppLinux'
              appName: '$(backendAppName)'
              resourceGroupName: '$(backendResourceGroup)'
              package: '$(Pipeline.Workspace)/**/*.zip'
              runtimeStack: 'PYTHON|$(pythonVersion)'
  
  - deployment: DeployFrontend
    displayName: 'Deploy Frontend'
    environment: 'production'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          # Configure based on chosen deployment method
          # (Azure Static Web Apps or App Service)
          - script: echo "Frontend deployment configuration needed"
